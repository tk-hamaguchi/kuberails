version: 2.1

executors:
  default:
    docker:
      - image: circleci/ruby:2.5.3
    working_directory: ~/workspace
    environment:
      BUNDLER_VERSION: 2.0.1

commands:
  save_bundle_cache:
    steps:
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
  restore_bundle_cache:
    steps:
      - run:
          name: Install bundler v2
          command: |
            gem uninstall bundler
            gem install bundler -v ${BUNDLER_VERSION} --no-document
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-


jobs:
  bundler:
    executor:
      name: default
    steps:
      - checkout
      - restore_bundle_cache
      - run: bundle install --jobs=4 --retry=3 --deployment
      - save_bundle_cache

  rubocop:
    executor:
      name: default
    steps:
      - checkout
      - restore_bundle_cache
      - run: mkdir /tmp/test-results /tmp/artifacts
      - run: bundle install --deployment
      - run:
          name: lint check
          command: |
            bundle exec rubocop -D -R -c .rubocop.yml \
              -r $(bundle show rubocop-junit-formatter)/lib/rubocop/formatter/junit_formatter.rb \
              --format RuboCop::Formatter::JUnitFormatter --out /tmp/test-results/rubocop.xml \
              -f html -o /tmp/artifacts/rubocop.html \
              -fp
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/artifacts
          destination: rubocop

  rspec:
    executor:
      name: default
    parallelism: 1
    steps:
      - checkout
      - restore_bundle_cache
      - run: mkdir /tmp/test-results /tmp/artifacts
      - run: bundle install --deployment
      - run:
          name: run tests
          command: |
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format RspecJunitFormatter --out /tmp/test-results/rspec.xml \
              --format html --out /tmp/artifacts/rspec.html \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/artifacts
          destination: rspec
      - store_artifacts:
          path: coverage
          destination: coverage


workflows:
  build_and_test:
    jobs:
      - bundler
      - rubocop:
          requires:
            - bundler
      - rspec:
          requires:
            - rubocop

